{
  "regex": [
    { "name": "RSA", "pattern": "\\bRSA(-?(1024|2048|4096))?\\b|\\bPKCS#?1\\b|\\bPKCS#?8\\b|\\bmodulus\\b|\\bpublic\\s+exponent\\b|\\bprivate\\s+exponent\\b", "icase": true },
    { "name": "RSA exponent 65537", "pattern": "\\b(public\\s+exponent\\s*(=|:)?\\s*)?(65537|0x?10001)\\b", "icase": true },

    { "name": "ECC/ECDSA/ECDH", "pattern": "\\b(ECC|ECDSA|ECDH|EC_KEY|EC_GROUP)\\b|\\bsecp(256r1|384r1|521r1|224r1|224k1|256k1)\\b|\\bP-(256|384|521)\\b|\\b(Curve25519|Ed25519|X25519|X448|Ed448)\\b", "icase": true },
    { "name": "DSA", "pattern": "\\b(DSA|DSS|Digital\\s+Signature\\s+Algorithm)\\b|\\bDSA_(sign|verify)\\b", "icase": true },
    { "name": "Diffie-Hellman", "pattern": "\\b(DH|Diffie-?Hellman)\\b(-(1024|2048|4096))?|\\bmodexp\\b|\\bprime\\s+modulus\\b", "icase": true },
    { "name": "ElGamal", "pattern": "\\bElGamal(\\s+Encryption|\\s+Signature)?\\b", "icase": true },

    { "name": "AES-128/modes", "pattern": "\\bAES([-_]?128)?\\b|\\bRijndael\\b|\\bAdvanced\\s+Encryption\\s+Standard\\b|\\bAES/(CBC|GCM|ECB|OFB|CTR)\\b|\\bAES_set_(encrypt|decrypt)_key\\b", "icase": true },
    { "name": "3DES", "pattern": "\\b(3DES|TripleDES|DES|Data\\s+Encryption\\s+Standard)\\b", "icase": true },
    { "name": "Blowfish/bcrypt", "pattern": "\\bBlowfish\\b|\\bbcrypt\\b", "icase": true },
    { "name": "RC4", "pattern": "\\b(RC4|ARC4|Rivest\\s+Cipher\\s*4)\\b", "icase": true },

    { "name": "SHA", "pattern": "\\b(SHA[-_]?1|SHA[-_]?224|SHA[-_]?256|SHA[-_]?384|SHA[-_]?512)\\b|\\bsha1sum\\b|\\bsha256sum\\b|\\bsha512sum\\b|\\bSecure\\s+Hash\\s+Algorithm\\s+1\\b|\\bSecure\\s+Hash\\s+Algorithm\\s+2\\b", "icase": true },
    { "name": "MD5", "pattern": "\\bMD5\\b|\\bMessage\\s+Digest\\s+5\\b|\\bmd5sum\\b", "icase": true },

    { "name": "OID dotted (rsaEncryption)", "pattern": "\\b1\\.2\\.840\\.113549\\.1\\.1\\.1\\b", "icase": true },
    { "name": "OID dotted (rsassaPss)", "pattern": "\\b1\\.2\\.840\\.113549\\.1\\.1\\.10\\b", "icase": true },
    { "name": "OID dotted (sha256WithRSAEncryption)", "pattern": "\\b1\\.2\\.840\\.113549\\.1\\.1\\.11\\b", "icase": true },
    { "name": "OID dotted (pkcs-1)", "pattern": "\\b1\\.2\\.840\\.113549\\.1\\.1\\b", "icase": true },
    { "name": "OID dotted (pbeWithMD2AndDES-CBC)", "pattern": "\\b1\\.2\\.840\\.113549\\.1\\.5\\.1\\b", "icase": true },
    { "name": "OID dotted (emailAddress)", "pattern": "\\b1\\.2\\.840\\.113549\\.1\\.9\\.1\\b", "icase": true },

    { "name": "OID dotted (ecPublicKey)", "pattern": "\\b1\\.2\\.840\\.10045\\.2\\.1\\b", "icase": true },
    { "name": "OID dotted (secp256r1/prime256v1)", "pattern": "\\b1\\.2\\.840\\.10045\\.3\\.1\\.7\\b", "icase": true },
    { "name": "OID dotted (secp384r1)", "pattern": "\\b1\\.3\\.132\\.0\\.34\\b", "icase": true },
    { "name": "OID dotted (secp521r1)", "pattern": "\\b1\\.3\\.132\\.0\\.35\\b", "icase": true },
    { "name": "OID dotted (secp224r1)", "pattern": "\\b1\\.3\\.132\\.0\\.33\\b", "icase": true },
    { "name": "OID dotted (secp224k1)", "pattern": "\\b1\\.3\\.132\\.0\\.32\\b", "icase": true },
    { "name": "OID dotted (secp256k1)", "pattern": "\\b1\\.3\\.132\\.0\\.10\\b", "icase": true },
    { "name": "OID dotted (brainpoolP256r1)", "pattern": "\\b1\\.3\\.36\\.3\\.3\\.2\\.8\\.1\\.1\\.7\\b", "icase": true },
    { "name": "OID dotted (brainpoolP384r1)", "pattern": "\\b1\\.3\\.36\\.3\\.3\\.2\\.8\\.1\\.1\\.11\\b", "icase": true },
    { "name": "OID dotted (brainpoolP512r1)", "pattern": "\\b1\\.3\\.36\\.3\\.3\\.2\\.8\\.1\\.1\\.13\\b", "icase": true },
    { "name": "OID dotted (X25519)", "pattern": "\\b1\\.3\\.101\\.110\\b", "icase": true },
    { "name": "OID dotted (X448)", "pattern": "\\b1\\.3\\.101\\.111\\b", "icase": true },
    { "name": "OID dotted (Ed25519)", "pattern": "\\b1\\.3\\.101\\.112\\b", "icase": true },
    { "name": "OID dotted (Ed448)", "pattern": "\\b1\\.3\\.101\\.113\\b", "icase": true },

    { "name": "PEM Header (Generic)", "pattern": "-----BEGIN (\\w+\\s)?PRIVATE KEY-----|-----BEGIN PUBLIC KEY-----|-----BEGIN CERTIFICATE-----", "icase": false },
    { "name": "PEM Header (Specific)", "pattern": "-----BEGIN (RSA|DSA|EC) PRIVATE KEY-----", "icase": false },

    { "name": "API (OpenSSL)", "pattern": "\\b(EVP_aes_128_cbc|EVP_des_ede3_cbc|EVP_sha256|EVP_md5|RSA_public_encrypt|RSA_private_decrypt|DSA_sign|ECDSA_sign|EC_KEY_new_by_curve_name)\\b", "icase": true },
    { "name": "API (Windows CNG/CAPI)", "pattern": "\\b(BCryptEncrypt|BCryptDecrypt|BCryptSignHash|NCryptCreatePersistedKey|CryptAcquireContext|CryptEncrypt|CryptDecrypt|CryptCreateHash|CryptSignHash)\\b", "icase": false },
    { "name": "API (libgcrypt)", "pattern": "\\b(gcry_cipher_open|gcry_md_open|gcry_pk_sign|gcry_pk_encrypt)\\b", "icase": true }
  ],

  "oids": [
    { "name": "pkcs-1", "oid": "1.2.840.113549.1.1" },
    { "name": "rsaEncryption", "oid": "1.2.840.113549.1.1.1" },
    { "name": "md2WithRSAEncryption", "oid": "1.2.840.113549.1.1.2" },
    { "name": "md4WithRSAEncryption", "oid": "1.2.840.113549.1.1.3" },
    { "name": "md5WithRSAEncryption", "oid": "1.2.840.113549.1.1.4" },
    { "name": "sha1WithRSAEncryption", "oid": "1.2.840.113549.1.1.5" },
    { "name": "rsassaPss", "oid": "1.2.840.113549.1.1.10" },
    { "name": "sha256WithRSAEncryption", "oid": "1.2.840.113549.1.1.11" },
    { "name": "sha384WithRSAEncryption", "oid": "1.2.840.113549.1.1.12" },
    { "name": "sha512WithRSAEncryption", "oid": "1.2.840.113549.1.1.13" },
    { "name": "sha224WithRSAEncryption", "oid": "1.2.840.113549.1.1.14" },
    { "name": "sha512_224WithRSAEncryption", "oid": "1.2.840.113549.1.1.15" },
    { "name": "sha512_256WithRSAEncryption", "oid": "1.2.840.113549.1.1.16" },
    { "name": "pbeWithMD2AndDES-CBC", "oid": "1.2.840.113549.1.5.1" },
    { "name": "emailAddress", "oid": "1.2.840.113549.1.9.1" },

    { "name": "ecPublicKey", "oid": "1.2.840.10045.2.1" },
    { "name": "ecdsa-with-SHA1", "oid": "1.2.840.10045.4.1" },
    { "name": "ecdsa-with-SHA224", "oid": "1.2.840.10045.4.3.1" },
    { "name": "ecdsa-with-SHA256", "oid": "1.2.840.10045.4.3.2" },
    { "name": "ecdsa-with-SHA384", "oid": "1.2.840.10045.4.3.3" },
    { "name": "ecdsa-with-SHA512", "oid": "1.2.840.10045.4.3.4" },

    { "name": "secp256r1 (prime256v1)", "oid": "1.2.840.10045.3.1.7" },
    { "name": "secp384r1", "oid": "1.3.132.0.34" },
    { "name": "secp521r1", "oid": "1.3.132.0.35" },
    { "name": "secp224r1", "oid": "1.3.132.0.33" },
    { "name": "secp224k1", "oid": "1.3.132.0.32" },
    { "name": "secp256k1", "oid": "1.3.132.0.10" },

    { "name": "sect283k1", "oid": "1.3.132.0.16" },
    { "name": "sect283r1", "oid": "1.3.132.0.17" },
    { "name": "sect163k1", "oid": "1.3.132.0.1" },
    { "name": "sect163r2", "oid": "1.3.132.0.15" },
    { "name": "sect233k1", "oid": "1.3.132.0.24" },
    { "name": "sect233r1", "oid": "1.3.132.0.26" },

    { "name": "brainpoolP256r1", "oid": "1.3.36.3.3.2.8.1.1.7" },
    { "name": "brainpoolP384r1", "oid": "1.3.36.3.3.2.8.1.1.11" },
    { "name": "brainpoolP512r1", "oid": "1.3.36.3.3.2.8.1.1.13" },

    { "name": "X25519", "oid": "1.3.101.110" },
    { "name": "X448", "oid": "1.3.101.111" },
    { "name": "Ed25519", "oid": "1.3.101.112" },
    { "name": "Ed448", "oid": "1.3.101.113" },

    { "name": "dhSinglePass-stdDH-sha224kdf-scheme", "oid": "1.3.132.1.11.1" },
    { "name": "dhSinglePass-stdDH-sha256kdf-scheme", "oid": "1.3.132.1.11.2" },
    { "name": "dhSinglePass-stdDH-sha384kdf-scheme", "oid": "1.3.132.1.11.3" },
    { "name": "dhSinglePass-stdDH-sha512kdf-scheme", "oid": "1.3.132.1.11.4" },
    { "name": "dhSinglePass-cofactorDH-sha1kdf-scheme", "oid": "1.3.132.1.12" },
    { "name": "id-alg-ESDH", "oid": "1.2.840.113549.1.9.16.3.5" },
    { "name": "id-alg-SDHW", "oid": "1.2.840.113549.1.9.16.3.16" },
    { "name": "id-alg-ESDHwith3DES", "oid": "1.2.840.113549.1.9.16.3.15" },
    { "name": "id-alg-ESDHwithAES128", "oid": "1.2.840.113549.1.9.16.3.17" },
    { "name": "id-alg-ESDHwithAES192", "oid": "1.2.840.113549.1.9.16.3.18" },
    { "name": "id-alg-ESDHwithAES256", "oid": "1.2.840.113549.1.9.16.3.19" },

    { "name": "id-GostR3410-2001-CryptoPro-A", "oid": "1.2.643.2.2.35.1" },
    { "name": "id-GostR3410-2001-CryptoPro-B", "oid": "1.2.643.2.2.35.2" },
    { "name": "id-GostR3410-2001-CryptoPro-C", "oid": "1.2.643.2.2.35.3" },
    { "name": "id-GostR3410-2001-CryptoPro-XchA", "oid": "1.2.643.2.2.36.0" },
    { "name": "id-GostR3410-2001-CryptoPro-XchB", "oid": "1.2.643.2.2.36.1" },

    { "name": "Constant (AES S-Box)", "bytes},
    { "name": "Constant (MD5 IV, little-endian)", "bytes": "01 23 45 67 89 AB CD EF FE DC BA 98 76 54 32 10" },
    { "name": "Constant (SHA-1 IV, big-endian)", "bytes": "67 45 23 01 EF CD AB 89 98 BA DC FE 10 32 54 76 C3 D2 E1 F0" },
    { "name": "Constant (SHA-256 IV, big-endian)", "bytes": "6A 09 E6 67 BB 67 AE 85 3C 6E F3 72 A5 4F F5 3A 51 0E 52 7F 9B 05 68 8C 1F 83 D9 AB CD 5B E0 CD 19" },

    { "name": "ECC(secp256r1 param p)",  "bytes": "FF FF FF FF 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF" },
    { "name": "ECC(secp256r1 param a)",  "bytes": "FF FF FF FF 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FC" },
    { "name": "ECC(secp256r1 param b)",  "bytes": "5A C6 35 D8 AA 3A 93 E7 B3 EB BD 55 76 98 86 BC 65 1D 06 B0 CC 53 B0 F6 3B CE 3C 3E 27 D2 60 4B" },
    { "name": "ECC(secp256r1 param Gx)", "bytes": "6B 17 D1 F2 E1 2C 42 47 F8 BC E6 E5 63 A4 40 F2 77 03 7D 81 2D EB 33 A0 F4 A1 39 45 D8 98 C2 96" },
    { "name": "ECC(secp256r1 param Gy)", "bytes": "4F E3 42 E2 FE 1A 7F 9B 8E E7 EB 4A 7C 0F 9E 16 2B CE 33 57 6B 31 5E CE CB B6 40 68 37 BF 51 F5" },
    { "name": "ECC(secp256r1 param n)",  "bytes": "FF FF FF FF 00 00 00 00 FF FF FF FF FF FF FF FF BC E6 FA AD A7 17 9E 84 F3 B9 CA C2 FC 63 25 51" },

    { "name": "ECC(secp384r1 param p)", "bytes": "FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FE FF FF FF FF 00 00 00 00 00 00 00 00 FF FF FF FF" },
    { "name": "ECC(secp384r1 param a)", "bytes": "FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FE FF FF FF FF 00 00 00 00 00 00 00 00 FF FF FF FC" },
    { "name": "ECC(secp384r1 param b)", "bytes": "B3 31 2F A7 E2 3E E7 E4 98 8E 05 6B E3 F8 2D 19 18 1D 9C 6E FE 81 41 12 03 14 08 8F 50 13 87 5A C6 56 39 8D 8A 2E D1 19 D2 A8 5C 8E DD 3E C2 AE F" },
    { "name": "ECC(secp384r1 param Gx)", "bytes": "AA 87 CA 22 BE 8B 05 37 8E B1 C7 1E F3 20 AD 74 6E 1D 3B 62 8B A7 9B 98 59 F7 41 E0 82 54 2A 38 55 02 F2 5D BF 55 29 6C 3A 54 5E 38 72 76 0A B7" },
    { "name": "ECC(secp384r1 param Gy)", "bytes": "36 17 DE 4A 96 26 2C 6F 5D 9E 98 BF 92 92 DC 29 F8 F4 1D BD 28 9A 14 7C E9 DA 31 13 B5 F0 B8 C0 0A 60 B1 CE 1D 7E 81 9D 7A 43 1D 7C 90 EA 0E 5F" },
    { "name": "ECC(secp384r1 param n)", "bytes": "FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FE FF FF FF FF 00 00 00 00 00 00 00 00 FF FF FF FF C7 63 4D 81 F4 37 2D DF 58 1A 0D B2 48 B0 A7 7A EC EC 19 6A CC C5 29 73" },

    { "name": "ECC(secp521r1 param p)", "bytes": "01 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF" },

    { "name": "ECC(secp224r1 param p)", "bytes": "FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00 00 00 00 01" },
    { "name": "ECC(secp224k1 param p)", "bytes": "FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FE FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF E5 6D" },
    { "name": "ECC(secp256k1 param p)", "bytes": "FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FE FF FF FF FC 2F" },

    { "name": "ECC(brainpoolP256r1 param p)", "bytes": "A9 FB 57 DB A1 EE A9 BC 3E 66 0A 90 9D 83 8D 72 6E 3B F6 23 D5 26 20 28 20 13 48 1D 1F 6E 53 77" },
    { "name": "ECC(brainpoolP384r1 param p)", "bytes": "8C B9 1E 82 A3 38 6D 28 0F 5D 6F 7E 50 E6 41 DF 15 2F 71 09 ED 54 56 B4 12 B1 DA 19 7F B7 11 23 AC D3 A7 29 90 1D 1A 71 87 47 00 13 31 07 EC 53" },
    { "name": "ECC(brainpoolP512r1 param p)", "bytes": "AA DD 9D B8 DB E9 C4 8B 3F D4 E6 AE 33 C9 FC 07 CB 30 8D B3 B3 C9 D2 0E D6 63 9C CA 70 33 08 71 7D 4D 9B 00 9B CC 66 84 2A EC DA 12 AE 6A 38 0E 6" },

    { "name": "Curve(X25519) prime p", "bytes": "7F FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF ED" },
    { "name": "Curve(X448) prime p",   "bytes": "FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FE FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF" },
    { "name": "Curve(Ed25519) prime p","bytes": "7F FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF ED" },

    { "name": "GOSTR3410-A param p", "bytes": "FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FD 97" },
    { "name": "GOSTR3410-A param a", "bytes": "FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FD 94" }
  ],

  "ast_rules": [
    { "id": "py_md5_call", "lang": "python", "kind": "call_fullname", "callee": "hashlib.md5", "message": "Python: hashlib.md5() usage", "severity": "med" },
    { "id": "py_sha1_call", "lang": "python", "kind": "call_fullname", "callee": "hashlib.sha1", "message": "Python: hashlib.sha1() usage", "severity": "med" },
    { "id": "py_hashlib_new_weak", "lang": "python", "kind": "call_fullname+arg", "callee": "hashlib.new", "arg_regex": "^(md5|sha1)$", "message": "Python: hashlib.new('md5'|'sha1')", "severity": "med" },

    { "id": "java_md_getInstance", "lang": "java", "kind": "call", "callee": "MessageDigest.getInstance", "arg_regex": "(MD5|SHA-1)", "message": "Java: MessageDigest.getInstance(MD5|SHA-1)", "severity": "med" },
    { "id": "java_cipher_weak", "lang": "java", "kind": "call", "callee": "Cipher.getInstance", "arg_regex": "(DES/ECB|RC4|AES/ECB)", "message": "Java: Cipher.getInstance(DES/ECB|RC4|AES/ECB)", "severity": "high" },

    { "id": "cpp_openssl_md", "lang": "cpp", "kind": "call", "callees": ["EVP_md5", "EVP_sha1", "MD5_Init", "SHA1_Init"], "message": "C/C++: weak hash usage (MD5/SHA1)", "severity": "med" },
    { "id": "cpp_des_rc4", "lang": "cpp", "kind": "call", "callees": ["DES_set_key", "EVP_des_ecb", "EVP_des_cbc", "EVP_rc4"], "message": "C/C++: DES/RC4 usage", "severity": "high" }
  ]
}
